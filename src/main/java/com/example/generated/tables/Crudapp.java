/*
 * This file is generated by jOOQ.
 */
package com.example.generated.tables;


import com.example.generated.tables.records.CrudappRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Crudapp extends TableImpl<CrudappRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>crudapp.crudapp</code>
     */
    public static final Crudapp CRUDAPP_ = new Crudapp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CrudappRecord> getRecordType() {
        return CrudappRecord.class;
    }

    /**
     * The column <code>crudapp.crudapp.name</code>.
     */
    public final TableField<CrudappRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>crudapp.crudapp.age</code>.
     */
    public final TableField<CrudappRecord, Integer> AGE = createField(DSL.name("age"), SQLDataType.INTEGER, this, "");

    private Crudapp(Name alias, Table<CrudappRecord> aliased) {
        this(alias, aliased, null);
    }

    private Crudapp(Name alias, Table<CrudappRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>crudapp.crudapp</code> table reference
     */
    public Crudapp(String alias) {
        this(DSL.name(alias), CRUDAPP_);
    }

    /**
     * Create an aliased <code>crudapp.crudapp</code> table reference
     */
    public Crudapp(Name alias) {
        this(alias, CRUDAPP_);
    }

    /**
     * Create a <code>crudapp.crudapp</code> table reference
     */
    public Crudapp() {
        this(DSL.name("crudapp"), null);
    }

    public <O extends Record> Crudapp(Table<O> child, ForeignKey<O, CrudappRecord> key) {
        super(child, key, CRUDAPP_);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : com.example.generated.Crudapp.CRUDAPP;
    }

    @Override
    public Crudapp as(String alias) {
        return new Crudapp(DSL.name(alias), this);
    }

    @Override
    public Crudapp as(Name alias) {
        return new Crudapp(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Crudapp rename(String name) {
        return new Crudapp(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Crudapp rename(Name name) {
        return new Crudapp(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
